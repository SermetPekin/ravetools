// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// fftw_r2c
SEXP fftw_r2c(SEXP data, int HermConj, SEXP ret);
RcppExport SEXP _ravetools_fftw_r2c(SEXP dataSEXP, SEXP HermConjSEXP, SEXP retSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type HermConj(HermConjSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ret(retSEXP);
    rcpp_result_gen = Rcpp::wrap(fftw_r2c(data, HermConj, ret));
    return rcpp_result_gen;
END_RCPP
}
// mvfftw_r2c
SEXP mvfftw_r2c(SEXP data, int fftwplanopt, SEXP ret);
RcppExport SEXP _ravetools_mvfftw_r2c(SEXP dataSEXP, SEXP fftwplanoptSEXP, SEXP retSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type fftwplanopt(fftwplanoptSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ret(retSEXP);
    rcpp_result_gen = Rcpp::wrap(mvfftw_r2c(data, fftwplanopt, ret));
    return rcpp_result_gen;
END_RCPP
}
// fftw_c2c
SEXP fftw_c2c(SEXP data, int inverse, SEXP ret);
RcppExport SEXP _ravetools_fftw_c2c(SEXP dataSEXP, SEXP inverseSEXP, SEXP retSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type inverse(inverseSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ret(retSEXP);
    rcpp_result_gen = Rcpp::wrap(fftw_c2c(data, inverse, ret));
    return rcpp_result_gen;
END_RCPP
}
// fftw_c2r
SEXP fftw_c2r(SEXP data, int HermConj, SEXP ret);
RcppExport SEXP _ravetools_fftw_c2r(SEXP dataSEXP, SEXP HermConjSEXP, SEXP retSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type HermConj(HermConjSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ret(retSEXP);
    rcpp_result_gen = Rcpp::wrap(fftw_c2r(data, HermConj, ret));
    return rcpp_result_gen;
END_RCPP
}
// conjugate
SEXP conjugate(SEXP data);
RcppExport SEXP _ravetools_conjugate(SEXP dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type data(dataSEXP);
    rcpp_result_gen = Rcpp::wrap(conjugate(data));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ravetools_fftw_r2c", (DL_FUNC) &_ravetools_fftw_r2c, 3},
    {"_ravetools_mvfftw_r2c", (DL_FUNC) &_ravetools_mvfftw_r2c, 3},
    {"_ravetools_fftw_c2c", (DL_FUNC) &_ravetools_fftw_c2c, 3},
    {"_ravetools_fftw_c2r", (DL_FUNC) &_ravetools_fftw_c2r, 3},
    {"_ravetools_conjugate", (DL_FUNC) &_ravetools_conjugate, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_ravetools(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
