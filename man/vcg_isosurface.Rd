% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vcg.R
\name{vcg_isosurface}
\alias{vcg_isosurface}
\title{Create surface mesh from 3D-array}
\usage{
vcg_isosurface(
  volume,
  threshold_lb = 0,
  threshold_ub = NA,
  vox_to_ras = diag(c(-1, -1, 1, 1))
)
}
\arguments{
\item{volume}{a volume or a mask volume}

\item{vox_to_ras}{a \code{4x4} 'affine' transform matrix indicating the voxel-to-world transform.}

\item{threshold}{threshold for creating the surface}

\item{from}{numeric: the lower threshold of a range (overrides \code{threshold})}

\item{to}{numeric: the upper threshold of a range (overrides \code{threshold})}
}
\value{
returns a triangular mesh of class \code{'mesh3d'}
}
\description{
Create surface from 3D-array using marching cubes algorithm
}
\examples{

x <- seq(-2, 2, len = 50)
g <- expand.grid(x = x, y = x, z = x)
v <- array(g$x ^ 4 + g$y ^ 4 + g$z ^ 4,
           rep(length(x), 3))
mesh <- vcg_isosurface(v, threshold_lb = 10)

if(is_not_cran()) {

  rgl_view({

    rgl_call("mfrow3d", 1, 2)

    rgl_call("shade3d", mesh)

    rgl_call("next3d")

    rgl_call("shade3d",
             vcg_smooth_implicit(mesh, lambda = 1),
             col = 3)
  })

}
}
