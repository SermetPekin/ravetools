% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vcg.R
\name{vcg_smooth}
\alias{vcg_smooth}
\alias{vcg_smooth_implicit}
\alias{vcg_smooth_explicit}
\title{Implicit Smoothes a triangular mesh}
\usage{
vcg_smooth_implicit(
  mesh,
  lambda = 0.2,
  use_mass_matrix = TRUE,
  fix_border = FALSE,
  use_cot_weight = FALSE,
  degree = 1L,
  laplacian_weight = 1,
  smooth_quality = FALSE
)

vcg_smooth_explicit(
  mesh,
  type = c("taubin", "laplace", "HClaplace", "fujiLaplace", "angWeight",
    "surfPreserveLaplace"),
  iteration = 10,
  lambda = 0.5,
  mu = -0.53,
  delta = 0.1
)
}
\arguments{
\item{mesh}{triangular mesh stored as object of class 'mesh3d'.}

\item{lambda}{the amount of smoothness, useful only if
\code{use_mass_matrix} is \code{TRUE}; default is \code{0.2}}

\item{use_mass_matrix}{logical: whether to use mass matrix to keep the mesh
close to its original position (weighted per area distributed on vertices);
default is \code{TRUE}}

\item{fix_border}{logical: whether to fix the border vertices of the mesh;
default is \code{FALSE}}

\item{use_cot_weight}{logical: whether to use cotangent weight; default is
\code{FALSE} (using uniform 'Laplacian')}

\item{degree}{integer: degrees of 'Laplacian'; default is \code{1}}

\item{laplacian_weight}{numeric: weight when \code{use_cot_weight} is \code{FALSE};
default is \code{1.0}}

\item{smooth_quality}{logical: whether to smooth the quality (distances to target).}
}
\value{
returns an object of class "mesh3d" with:
\item{vb }{4xn matrix containing n vertices as homolougous coordinates.}
\item{normals}{4xn matrix containing vertex normals.}
\item{it }{4xm matrix containing vertex indices forming triangular
faces.}
}
\description{
Applies smoothing algorithms on a triangular mesh.
}
\examples{

data(humface)
smoothface <- vcgSmoothImplicit(humface)
## view
\dontrun{
require(rgl)
shade3d(smoothface, col=3)
}

}
\seealso{
\code{\link{vcgPlyRead},\link{vcgClean},\link{vcgSmooth}}
}
\author{
Zhengjia Wang
}
